${fullname_override != "" ? "fullnameOverride: ${fullname_override}" : ""}

# For the full suite of supported values, see https://www.consul.io/docs/platform/k8s/helm.html
global:
    domain: ${consul_domain}
    image: ${image}
    imageK8S: ${image_k8s}
    datacenter: ${datacenter}

server:
    replicas: ${server_replicas}
    bootstrapExpect: ${server_replicas}
    storage: ${server_storage}
    storageClass: ${server_storage_class}
    resources: |
        requests:
            cpu: ${server_cpu_request}
            memory: ${server_memory_request}
        limits:
            cpu: ${server_cpu_limit}
            memory: ${server_memory_limit}
    disruptionBudget:
        enabled: true
    extraConfig: ${server_extra_config}
    extraVolumes: ${server_extra_volumes}
    connect: false
    affinity: ${server_affinity}
    tolerations: ${server_tolerations}
    priorityClassName: ${server_priority_class}
    annotations: ${server_annotations}

client:
    enabled: ${client_enabled}
    grpc: false # Required for connect
    resources: |
        requests:
            cpu: ${client_cpu_request}
            memory: ${client_memory_request}
        limits:
            cpu: ${client_cpu_limit}
            memory: ${client_memory_limit}
    extraConfig: ${client_extra_config}
    extraVolumes: ${client_extra_volumes}
    tolerations: ${client_tolerations}
    priorityClassName: ${client_priority_class}
    annotations: ${client_annotations}

syncCatalog:
    enabled: ${enable_sync_catalog}
    default: ${sync_by_default}
    toConsul: ${sync_to_consul}
    toK8S: ${sync_to_k8s}
    k8sPrefix: ${sync_k8s_prefix}
    k8sTag: ${sync_k8s_tag}
    syncClusterIPServices: ${sync_cluster_ip_services}
    nodePortSyncType: ${sync_node_port_type}

ui:
    enabled: ${enable_ui}
    service:
        enabled: ${enable_ui}
        type: ${ui_service_type}
        annotations: ${ui_annotations}
        additionalSpec: ${ui_additional_spec}

connectInject:
    enabled: ${enable_connect_inject}
    default: ${connect_inject_by_default}
    namespaceSelector: ${connect_inject_namespace_selector}
    # certs:
    #     secretName: ""
    #     caBundle: ""
    #     certName: ""
    #     keyName: ""

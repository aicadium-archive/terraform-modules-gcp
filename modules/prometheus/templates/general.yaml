imagePullSecrets: ${image_pull_secrets}

## Monitors ConfigMap changes and POSTs to a URL
## Ref: https://github.com/jimmidyson/configmap-reload
##
configmapReload:
  ## configmap-reload container name
  ##
  name: ${configmap_name}

  ## configmap-reload container image
  ##
  image:
    repository: ${configmap_image_repo}
    tag: ${configmap_image_tag}
    pullPolicy: ${configmap_image_pull_policy}

  ## Additional configmap-reload container arguments
  ##
  extraArgs: ${configmap_extra_args}
  ## Additional configmap-reload volume directories
  ##
  extraVolumeDirs: ${configmap_extra_args}


  ## Additional configmap-reload mounts
  ##
  extraConfigmapMounts: ${configmap_extra_volumes}
    # - name: prometheus-alerts
    #   mountPath: /etc/alerts.d
    #   subPath: ""
    #   configMap: prometheus-alerts
    #   readOnly: true


  ## configmap-reload resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: ${configmap_resources}

initChownData:
  ## If false, data ownership will not be reset at startup
  ## This allows the prometheus-server to be run with an arbitrary user
  ##
  enabled: ${init_chown_enabled}

  ## initChownData container name
  ##
  name: ${init_chown_name}

  ## initChownData container image
  ##
  image:
    repository: ${init_chown_image_repo}
    tag: ${init_chown_image_tag}
    pullPolicy: ${init_chown_pull_policy}

  ## initChownData resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: ${init_chown_resources}
